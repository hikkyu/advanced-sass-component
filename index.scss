/* Global components map
======================== */
$ASComponents: () !global;


/* Utils function to merge component options
============================================ */
@function ASCMerge($componentName, $componentVariationName, $componentVariationOptions) {
    $component: map-get($ASComponents, $componentName);
    $componentVariation: map-get($component, $componentVariationName);

    $newComponentVariation: map-merge($componentVariation, $componentVariationOptions);
    $newComponent: map-merge($component, ($componentVariationName: $newComponentVariation));

    @return map-merge($ASComponents, ($componentName: $newComponent));
}

/* Mixin to add component
========================= */
@mixin ASCRegister($componentName, $componentVariationName, $componentVariationOptions: ()) {
    @if map-has-key($componentVariationOptions, 'selector') {}
    @else {
        $componentVariationOptions: map-merge($componentVariationOptions, ('selector': $componentVariationName));
    }

    @if(map-has-key($ASComponents, $componentName)) {
        $componentMap : map-get($ASComponents, $componentName);

        $componentMap : map-merge($componentMap, (
                $componentVariationName: $componentVariationOptions
        ));

        $ASComponents : map-merge($ASComponents, ($componentName: $componentMap)) !global;
    }
    @else {
        $ASComponents: map-merge($ASComponents, (
                $componentName: (
                        $componentVariationName : $componentVariationOptions
                )
        )) !global;
    }
}

@mixin ASCRegisterComponent($componentName, $componentVariationName, $componentVariationOptions: ()) {
    @warn 'ASCRegisterComponent is now deprecated use ASCRegister instead';
    @include ASCRegister($componentName, $componentVariationName, $componentVariationOptions);
}

/* Mixin to remove a component
============================== */
@mixin ASCUnregister($componentName, $componentVariationName) {
    @if (map-has-key($ASComponents, $componentName)) {
        $componentMap: map-get($ASComponents, $componentName);

        @if (map-has-key($componentMap, $componentVariationName)) {
            $componentMap: map-remove($componentMap, $componentVariationName);
            $ASComponents: map-merge($ASComponents, ($componentName: $componentMap)) !global;
        }
        @else {
            @warn 'Component "' + $componentName + '" doesn\'t have "'+ $componentVariationName +'" variation';
        }
    }
    @else {
        @warn 'Component "' + $componentName + '" is not registered';
    }
}

/* Mixin to configure components map
==================================== */
@mixin ASCConfig($componentName, $componentVariationName, $componentVariationOptions) {
    // $components(all) > $component(ex: "inlineList") > $componentVariationName(ex: "dashboardModulesList")
    $ASComponents: ASCMerge($componentName, $componentVariationName, $componentVariationOptions) !global;
}

/* Mixin to call right placeholders
=================================== */
@mixin ASCExtend($placeholder, $skin) {
    @extend #{$placeholder};
    @extend #{$placeholder}-skin-#{$skin} !optional;
}
